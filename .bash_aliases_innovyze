#!/usr/bin/env bash

# file: ~/.bash_aliases_innovyze - sourced by ~/.bashrc_aliases via $COMPANY_SHIT

# these are functions/aliases specific to Innovyze

# shellcheck disable=SC1090,SC2034,SC2139,SC2142,SC1117,SC2155

CO_BA_FILE=".bash_aliases_$COMPANY"

# if interactive shell - display message
[ -n "$PS1" ] && echo -n "$CO_BA_FILE (begin)... "

# -------------------- define functions --------------------

function cloneazrepo {
  # Get an Azure Repos Repo's clone SSH URL
  local _repo=$1
  # shellcheck disable=SC2086
  local _repo_list=$(getazrepocloneurl $_repo)
  local _repo_dir
  local _repo_ssh_url
  if [[ $(wc -l <<< "$_repo_list") -gt 1 ]]; then
    echo "please be more specific, more than one repo found:"
    # shellcheck disable=SC2013
    for _repo in $(awk -F'/' '{print $4}' <<< "$_repo_list"); do
      _repo_ssh_url=$(grep "/$_repo$" <<< "$_repo_list")
      echo " - $_repo ($_repo_ssh_url)"
    done
  elif [[ -z "$_repo_list" ]]; then
    echo "please try again, did not find anything matching '$_repo'"
  else
    echo "found: $_repo_list"
    _repo_dir="$(basename "$_repo_list")"
    if [[ -d "$_repo_dir" ]]; then
      echo "directory already exists: $_repo_dir"
      cd "$_repo_dir" || return
    else
      # shellcheck disable=SC2086
      git clone $_repo_list
      cd "$_repo_dir" || return
    fi
  fi
}

function getazrepocloneurl {
   # Get an Azure Repos Repo's clone SSH URL
   az repos list --query "[?contains(name,'$1')].sshUrl" -o tsv
}

function mstid {
   # Parse MS Teams URI link to channel and generate MS Teams ID, e.g.:
   #  given a MS Teams URI:
   #    https://teams.microsoft.com/l/channel/19%3a12345abcdef67890qwerty0812xx%40thread.tacv2/example-channel-?groupId=12345-abcd-1968-qwerty&tenantId=zxcvwert-2345
   #  generate this ID (and `pbcopy` it):
   #    19:12345abcdef67890qwerty0812xx@thread.tacv2

   if [[ -n "$1" ]]; then
      MS_TEAMS_URI=$1
   else
      if command -v pbpaste &> /dev/null; then
         read -r MS_TEAMS_URI <<< "$(pbpaste)"
         read -r ms_teams_id <<< "$(cut -d'/' -f6 <<< "$MS_TEAMS_URI" | sed 's/%3a/:/;s/%40/@/')"
         echo -n "MS Teams ID: $ms_teams_id"
         if command -v pbcopy &> /dev/null; then
            if pbcopy &> /dev/null <<< "$ms_teams_id"; then
               echo " (copied to clipboard)"
            else
               echo
            fi
         else
            echo
         fi
      else
         echo "Usage: ${FUNCNAME} MS_TEAMS_URI"
      fi
   fi
}

function rde {
   # runway: Set Deploy Environment
   local _env=$1
   if [ -n "$_env" ]; then
      case $_env in
         a) export DEPLOY_ENVIRONMENT="audit";;
         b) export DEPLOY_ENVIRONMENT="sandbox";;
         c) export DEPLOY_ENVIRONMENT="common";;
         d) export DEPLOY_ENVIRONMENT="dev";;
         i) export DEPLOY_ENVIRONMENT="int";;
         o) export DEPLOY_ENVIRONMENT="devops";;
         p) export DEPLOY_ENVIRONMENT="prod";;
         P) export DEPLOY_ENVIRONMENT="production";;
         q) export DEPLOY_ENVIRONMENT="qa";;
         s) export DEPLOY_ENVIRONMENT="stg";;
         S) export DEPLOY_ENVIRONMENT="staging";;
         u) unset  DEPLOY_ENVIRONMENT;;
         *) export DEPLOY_ENVIRONMENT="$_env";;
      esac
   fi
   echo "DEPLOY_ENVIRONMENT = ${DEPLOY_ENVIRONMENT:-N/A}"
}

function set_pip_extra_index_url {
   # runway: Set Deploy Environment
   local _ado_company=$1
   local _ado_project=$2
   local _ado_feed=$3
   local _ado_token
   [[ -z "$_ado_company" ]] && [[ -n "$ADO_COMPANY" ]] && _ado_company=$ADO_COMPANY
   [[ -z "$_ado_project" ]] && [[ -n "$ADO_PROJECT" ]] && _ado_project=$ADO_PROJECT
   [[ -z "$_ado_feed" ]] && [[ -n "$ADO_FEED" ]] && _ado_feed=$ADO_FEED
   [[ -z "$_ado_company" ]] && read -rp "ADO company?: " _ado_company
   [[ -z "$_ado_project" ]] && read -rp "ADO group?: " _ado_project
   [[ -z "$_ado_feed" ]] && read -rp "ADO feed?: " _ado_feed
   if [[ -n "$_ado_company" ]] && [[ -n "$_ado_project" ]] && [[ -n "$_ado_feed" ]]; then
      _ado_token=$(keyring -b artifacts_keyring.ArtifactsKeyringBackend get "https://pkgs.dev.azure.com/$_ado_company/$_ado_project/_packaging/$_ado_feed/pypi/simple/" VssSessionToken 2> /dev/null)
   fi
   if [ -n "$_ado_token" ]; then
      export PIP_EXTRA_INDEX_URL="https://rwh:$_ado_token@pkgs.dev.azure.com/$_ado_company/$_ado_project/_packaging/$_ado_feed/pypi/simple"
   else
      echo "could not get ADO token"
   fi
   echo "PIP_EXTRA_INDEX_URL = ${PIP_EXTRA_INDEX_URL:-N/A}"
}

function showcof {
   # show a company specific function
   if [ -n "$COMPANY_SHIT" ]; then
      local _ALIASES_FILE=$COMPANY_SHIT
      if [[ $1 ]]; then
         if grep -q "^function $1 " "$_ALIASES_FILE"; then
            sed -n '/^function '"$1"' /,/^}/p' "$_ALIASES_FILE"
         else
            echo "function: '$1' - not found"
         fi
      else
         echo
         echo "which function do you want to see?"
         grep "^function .* " "$_ALIASES_FILE" | awk '{print $2}' | cut -d'(' -f1 |  awk -v c=4 'BEGIN{print "\n\t--- Functions (use \`scof\` to show details) ---"}{if(NR%c){printf "  %-18s",$1}else{printf "  %-18s\n",$1}}END{print CR}'
         echo -ne "enter function: "
         read -r func
         echo
         showcof "$func"
      fi
   else
      echo "company alias file not set (COMPANY_SHIT)"
   fi
}

# -------------------- define aliases --------------------

# company common
alias cof="grep '^function .* ' ~/$CO_BA_FILE | awk '{print $2}' | cut -d'(' -f1 | sort | awk -v c=4 'BEGIN{print \"\n\t--- Functions (use \`scof\` to show details) ---\"}{if(NR%c){printf \"  %-18s\",\$2}else{printf \"  %-18s\n\",\$2}}END{print CR}'"
alias gitnewrel='set -x; git push origin :release 2>/dev/null; git branch -D release 2>/dev/null; git checkout develop && git fetch -p origin && git merge origin/develop; git checkout -b release; git push origin release; set +x'
alias npmchrome='export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true; export PUPPETEER_EXECUTABLE_PATH=$(which chromium)'
alias scoba='source ~/$CO_BA_FILE'
alias scof=showcof
alias scdnm="$HOME/repos/innovyze/devops-tools/aws/show-api-cdn-mappings.sh"
alias samrc="$HOME/repos/innovyze/devops-tools/aws/show-api-mr-configs.sh"
alias scfns="$HOME/repos/innovyze/devops-tools/aws/show-cfn-stacks.sh"
alias vcoba='[ -f $COMPANY_SHIT ] && { echo "editing: $COMPANY_SHIT"; vi $COMPANY_SHIT; sba; }'
# company specific
alias cd-doi="cd $HOME/repos/$COMPANY/devops-infrastructure"
alias vld='export VAULT_ADDR=$(< ~/.ssh/adsk_vault_address.dev); pbcopy < ~/.ssh/.adsk.vpn.dev.pw; vault login -method=ldap username=racop; vault token create -ttl=2764800'
alias vlp='export VAULT_ADDR=$(< ~/.ssh/adsk_vault_address.prd); pbcopy < ~/.ssh/.adsk.vpn.prd.pw; vault login -method=ldap username=racop; vault token create -ttl=2764800'

[ -n "$PS1" ] && echo -n "$CO_BA_FILE (end). "
